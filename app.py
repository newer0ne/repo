import streamlit as st
from gsheetsdb import connect
import pandas as pd
import numpy as np
import openpyxl
import io
from io import BytesIO
import os
import csv
from pyxlsb import open_workbook as open_xlsb

# Create a connection object.
conn = connect()
# Perform SQL query on the Google Sheet.
# Uses st.cache to only rerun when the query changes or after 10 min.
@st.cache(ttl=600)
def run_query(query):
    rows = conn.execute(query, headers=1)
    return rows

st.title('–û—Ç–¥–µ–ª –∏–Ω–Ω–æ–≤–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π')
st.header('–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ-–ø—Ä–æ–≥—Ä–∞–º–º–Ω–∞—è –≥—Ä—É–ø–ø–∞')
st.write('–ö—Ä–∞—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞: —Å–ª–µ–≤–∞ - –ø–∞–Ω–µ–ª—å —Ä–∞–±–æ—á–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π, –Ω–∏–∂–µ - —Ä–∞–±–æ—á–µ–µ –ø–æ–ª–µ. ',
         '–ü–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –ø–æ –ê–≠–° - –Ω–∞ —Ä–∞–±–æ—á–µ–º –ø–æ–ª–µ –æ—Ç–æ–±—Ä–∞–∂–∞—é—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.') 




st.sidebar.header('–ú–æ–¥—É–ª—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–µ–¥–æ–º–æ—Å—Ç–µ–π –û–ü–° –Ω–∞ –ê–≠–° –ê–ö–ö–£–Æ')

sheet_url = st.secrets["public_gsheets_url"]
rows = run_query(f'SELECT * FROM "{sheet_url}"')
tab = pd.DataFrame(rows)

uploaded_file = st.sidebar.file_uploader("–ó–∞–≥—Ä—É–∑–∫–∞ –≤–µ–¥–æ–º–æ—Å—Ç–∏ –æ–ø–æ—Ä –≤ —Ñ–æ—Ä–º–∞—Ç–µ .xls (–ù—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –ø–µ—Ä–≤—ã–µ –¥–≤–∞ —Å–∫—Ä—ã—Ç—ã—Ö —Å—Ç–æ–ª–±—Ü–∞. –¢–∞–±–ª–∏—Ü–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å–æ —Å—Ç–æ–ª–±—Ü–∞ **–ö–æ–¥ KKS**)")
if uploaded_file is not None:
    A = pd.read_excel(uploaded_file, sheet_name="Sheet1")
    final = pd.merge(A, tab, how = 'outer', on = ['Note'])
    show_final = final.drop(columns=['Name','Designation of the document', 'Pipeline system code', 'Pipe Run', 'Pipeline elevation', 'Room'])
    st.write('–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–ø–æ—Ä –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –≤ –≤–µ–¥–æ–º–æ—Å—Ç–∏ –û–ü–° –Ω–∞ –ê–≠–° –ê–ö–ö–£–Æ. ',
             '**–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å** —Ç–∞–±–ª–∏—Ü—É –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω –º–æ–∂–Ω–æ –∫–Ω–æ–ø–∫–æ–π, –Ω–∞—Ö–æ–¥—è—â–µ–π—Å—è **–≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É** —Ç–∞–±–ª–∏—Ü—ã.')
    st.write(show_final)
    @st.cache
    
        # –°–∫–∞—á–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –≤–µ–¥–æ–º–æ—Å—Ç—å
    def to_excel(df):
        output = BytesIO()
        writer = pd.ExcelWriter(output, engine='xlsxwriter')
        df.to_excel(writer, index=False, sheet_name='Sheet1')
        workbook = writer.book
        worksheet = writer.sheets['Sheet1']
        format1 = workbook.add_format({'num_format': '0.00'})
        worksheet.set_column('A:A', None, format1)
        writer.save()
        processed_data = output.getvalue()
        return processed_data
    df_xlsx = to_excel(final)
    st.sidebar.download_button(label='üì• –°–∫–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –≤–µ–¥–æ–º–æ—Å—Ç—å', data=df_xlsx, file_name= '–í–µ–¥–æ–º–æ—Å—Ç—å –æ–ø–æ—Ä.xlsx')
    if st.sidebar.button('üì• –°–∫–∞—á–∞—Ç—å –≤–µ–¥–æ–º–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–æ—á–Ω—ã—Ö –º–∞—Ä–æ–∫'):
        st.sidebar.write('–ú—ã —Ç–æ–∂–µ —Ö–æ—Ç–∏–º —á—Ç–æ–±—ã —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–ª–æ')
        st.balloons()
        
        
        
        


st.sidebar.header('–ú–æ–¥—É–ª—å –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –≤–µ–¥–æ–º–æ—Å—Ç–µ–π –û–ü–° –Ω–∞ –ö—É—Ä—Å–∫—É—é –ê–≠–°')
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –æ–ø–æ—Ä Lisega
#Li = st.secrets["public_gsheets_url_Lisega"]
#rows_Li = run_query(f'SELECT * FROM "{Li}"')
#tab_Li = pd.DataFrame(rows_Li)
#tab_Li['Li type'] = tab_Li['Lisega'].str[:2]
#tab_Li['Li diam class'] = tab_Li['Lisega'].str[2:4]
#tab_Li['Li temp class'] = tab_Li['Lisega'].str[4:6]

#Link_ClassRuEn = st.secrets["ClassRuEn"]
Link_CatLi = st.secrets["CatLi"]
Link_CatKT2 = st.secrets["CatKT2"]

#rows_ClassRuEn = run_query(f'SELECT * FROM "{Link_ClassRuEn}"')
rows_CatLi = run_query(f'SELECT * FROM "{Link_CatLi}"')
rows_CatKT2 = run_query(f'SELECT * FROM "{Link_CatKT2}"')

#ClassRuEn = pd.DataFrame(rows_ClassRuEn, dtype=str)
CatLi = pd.DataFrame(rows_CatLi, dtype=str)
CatKT2 = pd.DataFrame(rows_CatKT2, dtype=str)

#st.write(ClassRuEn)
st.header('–û—Ü–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ Lisega')
st.write(CatLi)
st.header('–û—Ü–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ KT2')
st.write(CatKT2)


st.header('–¢–∞–±–ª–∏—Ü–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è')
CatLi_Fz100 = CatLi.drop(columns=['Fz_250','Fz_350','Fz_450','Fz_500','Fz_510','Fz_530','Fz_560','Fz_580','Fz_600'])
CatKT2_Fz100 = CatKT2.drop(columns=['Fz_250','Fz_350'])
tabLiKT2 = pd.merge(CatLi_Fz100, CatKT2_Fz100, on = ['Li_type', 'Li_diam_class'])
st.write(tabLiKT2)



uploaded_file2 = st.sidebar.file_uploader("–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–π –≤–µ–¥–æ–º–æ—Å—Ç–∏ –æ–ø–æ—Ä –¥–ª—è –ö—É—Ä—Å–∫–æ–π –ê–≠–° (–°—Ç–æ–ª–±–µ—Ü —Å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π –Ω–∞–∑–≤–∞—Ç—å Lisega, –∫–æ–¥–∏—Ä–æ–≤–∫–∞ –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤)")
if uploaded_file2 is not None:
#    st.write(uploaded_file2)
    B = pd.read_excel(uploaded_file2, sheet_name=0, dtype={'Lisega': str})
    B['Li_type'] = B['Lisega'].str[:2]
    B['Li_diam_class'] = B['Lisega'].str[2:4]
    B['Li_temp_class'] = B['Lisega'].str[4:6]
    B_60 = B.loc[B['Li_type'] == '60']
    B_61 = B.loc[B['Li_type'] == '61']
    
#    B = pd.merge(B, tab_Li, how = 'left', on = ['Lisega'])
    st.write('–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –æ–ø–æ—Ä –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –≤ –≤–µ–¥–æ–º–æ—Å—Ç–∏ –û–ü–° –Ω–∞ –ö—É—Ä—Å–∫—É—é –ê–≠–°. ',
             '**–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å** —Ç–∞–±–ª–∏—Ü—É –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω –º–æ–∂–Ω–æ –∫–Ω–æ–ø–∫–æ–π, –Ω–∞—Ö–æ–¥—è—â–µ–π—Å—è **–≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É** —Ç–∞–±–ª–∏—Ü—ã.')
#    B = B.drop(['Li_prod_group', '‚Ññ —á–µ—Ä—Ç–µ–∂–∞'], 1)
    st.write(B)
    st.write(B.count())
#    st.write(B_61)
    B = pd.merge(B, ClassRuEn, how = 'inner', on = ['Li_type', 'Li_diam_class']) # 'Li_diam_class''Li_type'
    st.write(B)
    st.write(B.count())
    
#tab_Li['Li type'] = tab_Li['Lisega'].str[:2]
#tab_Li['Li diam class'] = tab_Li['Lisega'].str[2:4]
#tab_Li['Li temp class'] = tab_Li['Lisega'].str[4:6]
#st.write(tab_Li)
#tab_Li_61 = tab_Li.loc[tab_Li['Li type'] == '61']
#st.write(tab_Li_61)
    
    
    
    def to_excel(df):
        output = BytesIO()
        writer = pd.ExcelWriter(output, engine='xlsxwriter')
        df.to_excel(writer, index=False, sheet_name='Sheet1')
        workbook = writer.book
        worksheet = writer.sheets['Sheet1']
        format1 = workbook.add_format({'num_format': '0.00'})
        worksheet.set_column('A:A', None, format1)
        writer.save()
        processed_data = output.getvalue()
        return processed_data
    df_xlsx = to_excel(B)
    st.sidebar.download_button(label='üì• –°–∫–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—É—é –≤–µ–¥–æ–º–æ—Å—Ç—å –æ–ø–æ—Ä', data=df_xlsx, file_name= '–í–µ–¥–æ–º–æ—Å—Ç—å –æ–ø–æ—Ä –Ω–∞ –ö—É—Ä—Å–∫—É—é –ê–≠–°.xlsx')
    if st.sidebar.button('üì• –°–∫–∞—á–∞—Ç—å –≤–µ–¥–æ–º–æ—Å—Ç—å –æ—Ç–ø—Ä–∞–≤–æ—á–Ω—ã—Ö –º–∞—Ä–æ–∫'):
        st.sidebar.write('–ú—ã —Ç–æ–∂–µ —Ö–æ—Ç–∏–º —á—Ç–æ–±—ã —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–ª–æ')
        st.balloons()

        

        
        
        
        
st.sidebar.header('–ú–æ–¥—É–ª—å –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ê–≠–°')
stations = ["–õ–ê–≠–°-2 - –ê–ö–ö–£–Æ","–ö—É—Ä—Å–∫–∞—è –ê–≠–°", "–ê–≠–° –ê–ö–ö–£–Æ", "–ê–≠–° –•–∞–Ω—Ö–∏–∫–∏–≤–∏"]
add_selectbox = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–∑–æ—Ä–∞:", stations)
if st.sidebar.button('–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å'):
    if add_selectbox == "–õ–ê–≠–°-2 - –ê–ö–ö–£–Æ":
        st.header('–¢–∞–±–ª–∏—Ü–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –õ–ê–≠–°-2 - –ê–ö–ö–£–Æ')
        st.write('**–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å** —Ç–∞–±–ª–∏—Ü—É –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω –º–æ–∂–Ω–æ –∫–Ω–æ–ø–∫–æ–π, –Ω–∞—Ö–æ–¥—è—â–µ–π—Å—è **–≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É** —Ç–∞–±–ª–∏—Ü—ã.')
        Li2 = st.secrets["public_gsheets_url_Lisega2"]
        rows_Li2 = run_query(f'SELECT * FROM "{Li2}"')
        tab_Li2 = pd.DataFrame(rows_Li2)
        st.write(tab_Li2)
    if add_selectbox == "–ê–≠–° –ê–ö–ö–£–Æ":
        st.header('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ê–≠–° –ê–ö–ö–£–Æ')
        st.write('**–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å** —Ç–∞–±–ª–∏—Ü—É –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω –º–æ–∂–Ω–æ –∫–Ω–æ–ø–∫–æ–π, –Ω–∞—Ö–æ–¥—è—â–µ–π—Å—è **–≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É** —Ç–∞–±–ª–∏—Ü—ã.')
        st.write(tab)
    if add_selectbox == "–ö—É—Ä—Å–∫–∞—è –ê–≠–°":
        st.header('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ø–æ –ö—É—Ä—Å–∫–æ–π –ê–≠–°')
        st.write('**–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å** —Ç–∞–±–ª–∏—Ü—É –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω –º–æ–∂–Ω–æ –∫–Ω–æ–ø–∫–æ–π, –Ω–∞—Ö–æ–¥—è—â–µ–π—Å—è **–≤ –ø—Ä–∞–≤–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É–≥–ª—É** —Ç–∞–±–ª–∏—Ü—ã.')
        st.write(tab_Li)
    if add_selectbox == "–ê–≠–° –•–∞–Ω—Ö–∏–∫–∏–≤–∏":
        st.header('–û–ø—Ç–∏–º–∏—Å—Ç–∏—á–Ω—ã–π –≤—ã–±–æ—Ä :)')
        st.image('https://s.wine.style/images_gen/423/4239/0_0_prod_desktop.jpg')
